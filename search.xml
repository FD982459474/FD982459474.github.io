<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS 7安装与网络解决</title>
      <link href="/2022/07/30/%E5%8D%9A%E5%AE%A2/CentOS/"/>
      <url>/2022/07/30/%E5%8D%9A%E5%AE%A2/CentOS/</url>
      
        <content type="html"><![CDATA[<h2 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h2><h3 id="镜像下载"><a href="#镜像下载" class="headerlink" title="镜像下载"></a>镜像下载</h3><p>选择阿里云镜像进行OS下载: <a href="http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/">http://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/</a></p><p>选择DVD.ios文件进行下载</p><h3 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h3><ul><li><p>安装系统很简单,一直下一步就可以 注意切换一下盘符即可</p></li><li><p>进入系统界面后,点一下磁盘检查,之后可以直接下一步</p></li><li><p>配置一下root账户密码即可</p></li><li><p>配置完成后即可重启进入系统</p></li><li><p>输入用户名和密码后正式进入系统</p></li></ul><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">查看防火墙状态</span><br><span class="line">systemctl stauts firewall.service</span><br><span class="line"></span><br><span class="line">关闭防火墙</span><br><span class="line">systemctl stop firewall.service</span><br><span class="line"></span><br><span class="line">永久关闭防火墙</span><br><span class="line">systemctl disable firewall.service</span><br></pre></td></tr></table></figure><h3 id="配置网路"><a href="#配置网路" class="headerlink" title="配置网路"></a>配置网路</h3><ul><li>首先查看VMware自动设置的网段和网关<ul><li>点击编辑 虚拟网路编辑器 找到VMware8</li><li><img src="/../../img/CentOS7%E6%88%AA%E5%9B%BE/1.png"></li><li><strong>记下对应的子网IP,子网掩码,点击NAT设置</strong></li><li><img src="/../../img/CentOS%E6%88%AA%E5%9B%BE/../CentOS7%E6%88%AA%E5%9B%BE/2.png"></li><li><strong>注意要与本机的网关网段一样 但不要和子网IP和本机网关重复</strong></li><li>设置好后记下网关IP,子掩码,子网IP和本机网关</li></ul></li><li>在系统内 <strong>(大小写不可忽略)</strong><ul><li>输入指令: vi &#x2F;etc&#x2F;sysonfig&#x2F;network-scripts&#x2F;ifcfg-ens33</li><li><img src="/../../img/CentOS7%E6%88%AA%E5%9B%BE/3.png"></li><li>设置以下几个东西 i进入vi插入模式  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">设置获取静态IP</span><br><span class="line">BOOTPROTO = static</span><br><span class="line">设置网路开启状态</span><br><span class="line">ONBOOT = yes</span><br><span class="line">设置静态IP 注意这里的IP不要和网关和子网IP重复,但网段要相同,这里应该设置为192.168.31.3-255,但不要和本机IPV4地址重复</span><br><span class="line">IPADDR = 192.168.31.3</span><br><span class="line">设置子掩码 为网路编辑器中查到的子掩码</span><br><span class="line">NETMASK = 255.255.255.0</span><br><span class="line">设置子掩码位数长度</span><br><span class="line">PREFIX = 24</span><br><span class="line">设置网关 为网路编辑器中查到的网关IP</span><br><span class="line">GATEWAY = 192.168.31.2</span><br><span class="line">设置DNS解析</span><br><span class="line">DNS1 = 114.114.114.114</span><br></pre></td></tr></table></figure></li><li>配置完成后ESC, shift+: , wq保持退出</li><li>配置项如下所示  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BOOTPROTO = static</span><br><span class="line">ONBOOT = yes</span><br><span class="line">IPADDR = 192.168.31.3</span><br><span class="line">NETMASK = 255.255.255.0</span><br><span class="line">PREFIX = 24</span><br><span class="line">GATEWAY = 192.168.31.2</span><br><span class="line">DNS1 = 114.114.114.114</span><br></pre></td></tr></table></figure></li><li><strong>注 非必要项可以删除 防止干扰  见上上上图</strong> </li><li>配置完成后重启网络</li><li><pre><code class="shell">  systemctl restart network.service  或者  service network restart</code></pre></li><li><em>如发现无法进行重启,直接重启虚拟机,再重启网络服务即可</em></li></ul></li><li><strong>有必要插播的话,主机的所有东西都不用动! 不用动!</strong><ul><li>网路测试<ul><li>虚拟机<ul><li>ping <a href="http://www.baidu.com/">www.baidu.com</a> 网路正常</li></ul></li><li>主机<ul><li>正常上网检查即可</li></ul></li></ul></li><li>主机虚拟机互通测试<ul><li>虚拟机<ul><li>ping 192.168.31.108 有包发送则正常</li></ul></li><li>主机<ul><li>ping 192.168.31.3 收包则正常</li></ul></li></ul></li></ul></li></ul><h3 id="MobaXterm连接虚拟机"><a href="#MobaXterm连接虚拟机" class="headerlink" title="MobaXterm连接虚拟机"></a>MobaXterm连接虚拟机</h3><h6 id="需要虚拟机网络正常"><a href="#需要虚拟机网络正常" class="headerlink" title="需要虚拟机网络正常"></a>需要虚拟机网络正常</h6><ul><li>新建Session 填入IP地址 输入用户名密码即可连接</li><li><img src="/../../img/CentOS7%E6%88%AA%E5%9B%BE/4.png"></li><li><em>出现 Network error: Connection timed out问题</em><ul><li>首先看windows的Vmware的服务是否全是自动开启,若是 看下一步</li><li>找到Windows Defender防火墙 打开设置 关闭所有的防火墙</li><li>返回MobaXterm重新连接</li><li>进入root目录输入 chkconfig iptables off (永久性关闭防火墙)<ul><li>若报错 则先安装services : yum install iptables-services</li></ul></li><li>回到Windows Defender设置,打开所有的防火墙</li><li>若还无法解决<ul><li>检查是否禁用了服务 <ul><li>FLYSVR</li><li>域登录服务</li><li>交互式服务对话框检测服务</li><li>VMware虚拟机网络的动态IP配置服务</li></ul></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> liunx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel相关操作</title>
      <link href="/2022/07/27/%E5%8D%9A%E5%AE%A2/Excel/"/>
      <url>/2022/07/27/%E5%8D%9A%E5%AE%A2/Excel/</url>
      
        <content type="html"><![CDATA[<h2 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h2><h4 id="第一种-读xls类型的"><a href="#第一种-读xls类型的" class="headerlink" title="第一种 读xls类型的"></a>第一种 读xls类型的</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path = xlrd.open_workbook(<span class="string">&#x27;readxls.xls&#x27;</span>)</span><br><span class="line">sheet1 = path.sheets()[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,sheet1.nrows):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,sheet1.ncols):</span><br><span class="line">        <span class="built_in">print</span>(sheet1.cell(x,y).value)</span><br><span class="line">    </span><br><span class="line">data = [<span class="string">&quot;四&quot;</span>,<span class="number">41</span>,<span class="number">42</span>,<span class="number">43</span>,<span class="number">44</span>,<span class="number">45</span>,<span class="number">46</span>]</span><br><span class="line">wk = xlwt.Workbook()</span><br><span class="line">ws = wk.add_sheet(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(data)):</span><br><span class="line">    ws.write(x,<span class="number">0</span>,data[x])</span><br><span class="line">wk.save(<span class="string">&#x27;wkexcel.xls&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;success&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="第二种-用openpyxl-xlsx类型的"><a href="#第二种-用openpyxl-xlsx类型的" class="headerlink" title="第二种 用openpyxl xlsx类型的"></a>第二种 用openpyxl xlsx类型的</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">workbook = openpyxl.load_workbook(<span class="string">&#x27;read1.xlsx&#x27;</span>)</span><br><span class="line">sheets1 = workbook[<span class="string">&#x27;Sheet1&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,sheets1.max_row):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,sheets1.max_column):</span><br><span class="line">        <span class="built_in">print</span>(sheets1.cell(x, y).value)</span><br><span class="line"></span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line">sheet = wb.active</span><br><span class="line">sheet.title = <span class="string">&quot;sheet_new&quot;</span></span><br><span class="line">data = [</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;John Brown1S&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>, <span class="number">18</span>, </span><br><span class="line">    <span class="string">&#x27;address&#x27;</span>, <span class="string">&#x27;New York No. 1 Lake Park&#x27;</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(data)):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">2</span>):</span><br><span class="line">        sheet.cell(row=x+<span class="number">1</span>,column=y+<span class="number">1</span>,value=<span class="built_in">str</span>(data[x]))</span><br><span class="line">wb.save(<span class="string">&#x27;wirte1.xlsx&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = pd.read_excel(<span class="string">&quot;read1.xlsx&quot;</span>,header=<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&quot;第四行&quot;</span>:[<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>],</span><br><span class="line">    <span class="string">&quot;第五行&quot;</span>:[<span class="number">100</span>,<span class="number">101</span>,<span class="number">102</span>,<span class="number">103</span>],</span><br><span class="line">    <span class="string">&quot;第六行&quot;</span>:[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</span><br><span class="line">df = DataFrame(data1)</span><br><span class="line">df.to_excel(<span class="string">&quot;writepd.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="读写表："><a href="#读写表：" class="headerlink" title="读写表："></a>读写表：</h3><h4 id="xls格式：xlrd和xlwt"><a href="#xls格式：xlrd和xlwt" class="headerlink" title="xls格式：xlrd和xlwt"></a>xls格式：xlrd和xlwt</h4><ul><li>读：open_workbook  获取表格副本名 然后双层遍历</li><li>print(表名.cell(x,y).value)</li><li>写：xlwt.Workbook  添加副本add_sheet 写入.write(x,y,value) </li><li>保存 save</li></ul><h4 id="xlsx格式：openpyxl"><a href="#xlsx格式：openpyxl" class="headerlink" title="xlsx格式：openpyxl"></a>xlsx格式：openpyxl</h4><ul><li>读：openpyxl.load_workbook 获取表格副本名 双层遍历</li><li>print(表名.cell(x,y).value)</li><li>写：openpyxl.Workbook 激活active 写入sheet.cell(x,y,value)</li></ul><h4 id="xlsl格式：pandas"><a href="#xlsl格式：pandas" class="headerlink" title="xlsl格式：pandas"></a>xlsl格式：pandas</h4><ul><li>读：pandas.read_excel(表名) print(xxx)</li><li>写：DateFrame(数据) to_excel(表名)</li></ul><h2 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h2><h4 id="xlwt追加方式"><a href="#xlwt追加方式" class="headerlink" title="xlwt追加方式"></a>xlwt追加方式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">addexcel = open_workbook(<span class="string">&#x27;readxls.xls&#x27;</span>)</span><br><span class="line">row = addexcel.sheets()[<span class="number">0</span>].nrows</span><br><span class="line">addcp = copy(addexcel)</span><br><span class="line">table = addcp.get_sheet(<span class="number">0</span>)</span><br><span class="line">Values = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> Values:</span><br><span class="line">    table.write(row,<span class="number">0</span>,value)</span><br><span class="line">    table.write(row,<span class="number">1</span>,<span class="string">&#x27;haha&#x27;</span>)</span><br><span class="line">    table.write(row,<span class="number">2</span>,<span class="string">&#x27;lala&#x27;</span>)</span><br><span class="line">    row +=<span class="number">1</span></span><br><span class="line">addcp.save(<span class="string">&#x27;readxls.xls&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="openpyxl方式"><a href="#openpyxl方式" class="headerlink" title="openpyxl方式"></a>openpyxl方式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">workbook = openpyxl.load_workbook(<span class="string">&#x27;read1.xlsx&#x27;</span>)</span><br><span class="line">sheets1 = workbook[<span class="string">&#x27;Sheet1&#x27;</span>]</span><br><span class="line">nrows = sheets1.max_row</span><br><span class="line">ncols = sheets1.max_column</span><br><span class="line"></span><br><span class="line"><span class="comment">#method1</span></span><br><span class="line">sheets1[<span class="string">&quot;A20&quot;</span>] = <span class="string">&quot;新增&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#method2</span></span><br><span class="line">row_data = [<span class="number">800</span>,<span class="number">900</span>]</span><br><span class="line">sheets1.append(row_data)</span><br><span class="line"></span><br><span class="line">row_datas = [[<span class="number">33</span>,<span class="number">44</span>],[<span class="number">55</span>,<span class="number">66</span>]]</span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(row_datas)):</span><br><span class="line">    sheets1.append(row_datas[data])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;保存成功&quot;</span>)</span><br><span class="line">workbook.save(<span class="string">&quot;read1.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="pandas方式"><a href="#pandas方式" class="headerlink" title="pandas方式"></a>pandas方式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = pd.read_excel(<span class="string">&quot;read1.xlsx&quot;</span>,header=<span class="literal">None</span>)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&quot;第四行&quot;</span>:[<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>],</span><br><span class="line">    <span class="string">&quot;第五行&quot;</span>:[<span class="number">100</span>,<span class="number">101</span>,<span class="number">102</span>,<span class="number">103</span>],</span><br><span class="line">    <span class="string">&quot;第六行&quot;</span>:[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</span><br><span class="line">df = DataFrame(data1)</span><br><span class="line">df.to_excel(<span class="string">&quot;writepd.xlsx&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="追加："><a href="#追加：" class="headerlink" title="追加："></a>追加：</h3><h4 id="xls表格：xlwt形式"><a href="#xls表格：xlwt形式" class="headerlink" title="xls表格：xlwt形式"></a>xls表格：xlwt形式</h4><p>open_workbook(表名).sheet()[0].nrows<br>copy(open_workbook(表名))  get_sheet(0) 获取复制的第一张副本<br>遍历 write(row,0,value)<br>save(表名)</p><h4 id="xlsx表格：openpyxl方式"><a href="#xlsx表格：openpyxl方式" class="headerlink" title="xlsx表格：openpyxl方式"></a>xlsx表格：openpyxl方式</h4><p>openpyxl.load_workbook()<br>sheets1 &#x3D; workbook[副本名]<br>nrows &#x3D; sheets1.max_row<br>ncols &#x3D; sheets1.max_column</p><p>@method<br>sheet【”A20“】 &#x3D; “新增”<br>@method<br>data &#x3D; [800,900]<br>sheets.append(data)<br>workbook.save()</p><h4 id="xlsx格式：pandas方式"><a href="#xlsx格式：pandas方式" class="headerlink" title="xlsx格式：pandas方式"></a>xlsx格式：pandas方式</h4><p>写：DateFrame(数据) to_excel(表名) 实际是写入到另一个表格</p><h2 id="写入图片"><a href="#写入图片" class="headerlink" title="写入图片"></a>写入图片</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">text = &#123;</span><br><span class="line">    <span class="string">&quot;data&quot;</span>: [&#123;</span><br><span class="line">        <span class="string">&quot;issue&quot;</span>: <span class="number">78550</span>,</span><br><span class="line">        <span class="string">&quot;priority&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;assign&quot;</span>: <span class="string">&quot;xxxxxx@mesg.corp.net&quot;</span>,</span><br><span class="line">        <span class="string">&quot;creator&quot;</span>: <span class="string">&quot;xxxxxx@mesg.corp.net&quot;</span>,</span><br><span class="line">        <span class="string">&quot;msgurl&quot;</span>: <span class="string">&quot;https://w.wallhaven.cc/full/rd/wallhaven-rdwjj7.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;state&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&quot;describe&quot;</span>: <span class="literal">None</span>,</span><br><span class="line">        <span class="string">&quot;explain&quot;</span>: <span class="string">&quot;BUG单&quot;</span></span><br><span class="line">    &#125;,]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#创建一个表格并激活一个标题为New的sheet</span></span><br><span class="line">data = text[<span class="string">&quot;data&quot;</span>]</span><br><span class="line">wb = openpyxl.Workbook()</span><br><span class="line">sheet = wb.active</span><br><span class="line">sheet.title = <span class="string">&quot;New&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取字典键 即表格第一行的全部信息</span></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> data[<span class="number">0</span>]:</span><br><span class="line">    keys.append(key)</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历数据</span></span><br><span class="line"><span class="keyword">for</span> lennumber <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    <span class="comment">#第一行填入标题信息</span></span><br><span class="line">    <span class="keyword">if</span> lennumber==<span class="number">0</span> :</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(keys)):</span><br><span class="line">            sheet.cell(row=<span class="number">1</span>, column=x+<span class="number">1</span>, value=keys[x])</span><br><span class="line">    <span class="comment">#后面的行依次填充</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">        <span class="comment">#跳过图片链接的列另外处理 先将文字全部填充</span></span><br><span class="line">        <span class="keyword">if</span> num!=<span class="number">4</span>:</span><br><span class="line">            sheet.cell(row=lennumber+<span class="number">2</span>, column=num+<span class="number">1</span>, value=data[lennumber][keys[num]])</span><br><span class="line"></span><br><span class="line">wb.save(<span class="string">&quot;test.xlsx&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wb = openpyxl.load_workbook(<span class="string">&quot;test.xlsx&quot;</span>)</span><br><span class="line">sheet = wb[<span class="string">&quot;New&quot;</span>]</span><br><span class="line"><span class="comment">#设置列宽</span></span><br><span class="line">sheet.column_dimensions[<span class="string">&#x27;E&#x27;</span>].width = <span class="number">24</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">list</span> = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(data)):</span><br><span class="line">    url = data[x][<span class="string">&quot;msgurl&quot;</span>]</span><br><span class="line">    response = requests.get(url)</span><br><span class="line"></span><br><span class="line">    tempname = <span class="built_in">str</span>(<span class="built_in">str</span>(<span class="string">&quot;temp&quot;</span>+<span class="built_in">str</span>(x))+<span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line">    <span class="built_in">list</span>.append(tempname)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#下载jpg</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(tempname, <span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(response.content)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#设置行宽</span></span><br><span class="line">    sheet.row_dimensions[x+<span class="number">2</span>].height = <span class="number">150</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#调整图片尺寸</span></span><br><span class="line">    img_deal = ig.<span class="built_in">open</span>(tempname).resize((<span class="number">200</span>,<span class="number">200</span>),ig.ANTIALIAS)</span><br><span class="line">    img_deal.convert(<span class="string">&#x27;RGB&#x27;</span>).save(tempname)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#向表格指定位置插入图片</span></span><br><span class="line">    img  = Image(tempname)</span><br><span class="line">    imgwhere = <span class="built_in">str</span>(<span class="string">&#x27;E&#x27;</span>+<span class="built_in">str</span>(x+<span class="number">2</span>))</span><br><span class="line">    sheet.add_image(img,imgwhere)</span><br><span class="line"></span><br><span class="line">wb.save(<span class="string">&quot;test.xlsx&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除下载的图片</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">    os.remove(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;successs&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="response获取图片"><a href="#response获取图片" class="headerlink" title="response获取图片"></a>response获取图片</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">chesimg</span>(<span class="params">content</span>):</span><br><span class="line">    byte_stream = io.BytesIO(content)</span><br><span class="line">    roiImg = Image.<span class="built_in">open</span>(byte_stream)</span><br><span class="line"></span><br><span class="line">    imgBg = io.BytesIO()</span><br><span class="line"></span><br><span class="line">    roiImg.save(imgBg,<span class="built_in">format</span>=<span class="string">&quot;png&quot;</span>)</span><br><span class="line"></span><br><span class="line">    imgBg = imgBg.getvalue()</span><br><span class="line"></span><br><span class="line">    path = <span class="string">r&quot;C:\Users\xuweijin\Desktop\Remind\python_homework\res&quot;</span></span><br><span class="line"></span><br><span class="line">    name = <span class="string">&quot;temp.png&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path=path):</span><br><span class="line">        os.makedirs(path)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path+<span class="string">&quot;\\&quot;</span>+name,<span class="string">&quot;wb&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(imgBg)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;success&quot;</span>)</span><br><span class="line"></span><br><span class="line">chesimg(response.content)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>句柄和进程的获取</title>
      <link href="/2022/07/26/%E5%8D%9A%E5%AE%A2/%E5%8F%A5%E6%9F%84%E8%BF%9B%E7%A8%8B%E4%B8%80%E7%AF%87%E6%90%9E%E5%AE%9A/"/>
      <url>/2022/07/26/%E5%8D%9A%E5%AE%A2/%E5%8F%A5%E6%9F%84%E8%BF%9B%E7%A8%8B%E4%B8%80%E7%AF%87%E6%90%9E%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<h2 id="句柄类"><a href="#句柄类" class="headerlink" title="句柄类"></a>句柄类</h2><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> win32gui</span><br><span class="line"><span class="keyword">import</span> win32con</span><br><span class="line"><span class="keyword">import</span> win32api</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><ul><li><p>获取所有句柄</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hwnd_title = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_all_hwnd</span>(<span class="params">hwnd, mouse</span>):</span><br><span class="line">    <span class="keyword">if</span> (win32gui.IsWindow(hwnd) <span class="keyword">and</span> win32gui.IsWindowEnabled(hwnd) <span class="keyword">and</span> win32gui.IsWindowVisible(hwnd)):</span><br><span class="line">        hwnd_title.update(&#123;hwnd: win32gui.GetWindowText(hwnd)&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">win32gui.EnumWindows(get_all_hwnd, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> h, t <span class="keyword">in</span> hwnd_title.items():</span><br><span class="line">    <span class="keyword">if</span> t:</span><br><span class="line">        <span class="built_in">print</span>(h, t.encode(<span class="string">&#x27;utf-8&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>通过标题获取句柄</p><p>  hld &#x3D; win32gui.FindWindow(None,u”VsCode”)</p></li><li><p>通过句柄获取标题</p><p>  title &#x3D; win32gui.GetWindowText(hwnd)</p></li><li><p>通过句柄获取窗口定位</p><p>  left,top,right,bottom &#x3D; win32gui.GetWindowRect(hwnd)</p></li><li><p>设置鼠标位置和左键单击</p><p>  win32api.SetCursorPos([x, y])</p><p>  win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP | win32con.MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0)</p></li><li><p>…</p></li></ul><h2 id="进程-pustil"><a href="#进程-pustil" class="headerlink" title="进程 pustil"></a>进程 pustil</h2><ul><li><p>获取所有得进程</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> psutil.Process_iter([<span class="string">&#x27;pid&#x27;</span>, <span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;username&#x27;</span>]):</span><br><span class="line">    p.info[<span class="string">&#x27;pid&#x27;</span>]</span><br><span class="line">    p.info[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    p.info[<span class="string">&#x27;username&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>获取单个进程信息</p><p>  p&#x3D;psutil.Process(pid)<br>  p.name() p.exe p.status()</p></li><li><p>杀进程</p><p>  os.kill(s.pid,9)</p></li><li><p>查进程存在否</p><p>  psutil.pid_exists(pid)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VsCode搭建Django</title>
      <link href="/2022/07/25/%E5%8D%9A%E5%AE%A2/VsCode%E6%90%AD%E5%BB%BADjango/"/>
      <url>/2022/07/25/%E5%8D%9A%E5%AE%A2/VsCode%E6%90%AD%E5%BB%BADjango/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="安装Django"><a href="#安装Django" class="headerlink" title="安装Django"></a>安装Django</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install django</span><br><span class="line">pip show django</span><br></pre></td></tr></table></figure><p><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/django%E6%88%AA%E5%9B%BE1.png"></p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ol><li>进入项目root目录 打开dos命令行，运行命令创建工程项目<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">django-admin startproject your_django_project</span><br></pre></td></tr></table></figure></li><li>进入到django工程目录下中 cd your_django_project</li><li>通过venv创建python虚拟环境<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -m venv venv</span><br></pre></td></tr></table></figure>得到一个venv环境<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj2.png"><br>将Django复制进该目录Script目录下</li></ol><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><p>VsCode中搜索Django插件<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj3.png"></p><h2 id="关联环境"><a href="#关联环境" class="headerlink" title="关联环境"></a>关联环境</h2><p>使用VsCode打开之前创建的 your_django_project<br>Shitf+Ctrl+P 选择带有虚拟环境(venv)的解释器<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj4.png"></p><h2 id="配置调试"><a href="#配置调试" class="headerlink" title="配置调试"></a>配置调试</h2><p>vscode左侧菜单栏切换到运行和调试，点击创建 launch.json 文件<br>选择python<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj5.png"><br>选择Django<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj6.png"><br>启动运行即可运行服务<br><img src="/./../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/dj7.png"></p><h1 id="manage常用指令"><a href="#manage常用指令" class="headerlink" title="manage常用指令"></a>manage常用指令</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#从数据库删除所有数据</span><br><span class="line">python ./manage.py flush</span><br><span class="line"></span><br><span class="line">#检查创建新的迁移</span><br><span class="line">python ./manage.py makemigrations</span><br><span class="line"></span><br><span class="line">#同步模型状态和迁移</span><br><span class="line">python ./manage.py migrate</span><br><span class="line"></span><br><span class="line">#进入数据库shell模式</span><br><span class="line">python ./manage.py dbshell</span><br><span class="line"></span><br><span class="line">#runserver</span><br><span class="line">python ./manage.py runserver 127.0.0.1:8080</span><br><span class="line"></span><br><span class="line">#startapp</span><br><span class="line">python ./manage.py startapp project_name</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git将本地文件推送到远程仓库</title>
      <link href="/2022/07/25/%E5%8D%9A%E5%AE%A2/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
      <url>/2022/07/25/%E5%8D%9A%E5%AE%A2/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Git将本地文件提交到远程仓库"><a href="#使用Git将本地文件提交到远程仓库" class="headerlink" title="使用Git将本地文件提交到远程仓库"></a>使用Git将本地文件提交到远程仓库</h2><h3 id="现在要将本地代码推到git远程仓库保存，可以提交和拉取操作"><a href="#现在要将本地代码推到git远程仓库保存，可以提交和拉取操作" class="headerlink" title="现在要将本地代码推到git远程仓库保存，可以提交和拉取操作"></a>现在要将本地代码推到git远程仓库保存，可以提交和拉取操作</h3><ul><li>本地项目已经创建</li><li>git远程仓库已经建(github、gitee都行)</li></ul><h3 id="操作如下："><a href="#操作如下：" class="headerlink" title="操作如下："></a><strong>操作如下</strong>：</h3><ol><li>（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></li><li>把文件添加到版本库中，使用命令 git add . 添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure></li><li>用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;initialize the project&#x27;</span><br></pre></td></tr></table></figure></li><li>关联到远程库git remote add origin 你的远程库地址<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/FD982459474/project.git</span><br></pre></td></tr></table></figure></li><li>git pull获取远程库与本地同步合并(如果远程库不为空必须做这一步，否则后面的提交会失败)<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure></li><li>把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li><li>git常用操作命令<br><img src="/../../img/%E6%96%87%E7%AB%A0%E6%88%AA%E5%9B%BE/Git%E6%93%8D%E4%BD%9C%E9%9B%86.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Utils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库便捷操作</title>
      <link href="/2022/07/25/%E5%8D%9A%E5%AE%A2/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/07/25/%E5%8D%9A%E5%AE%A2/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库的备份和恢复"><a href="#数据库的备份和恢复" class="headerlink" title="数据库的备份和恢复"></a>数据库的备份和恢复</h2><ul><li>备份数据库<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>h主机名  <span class="operator">-</span>P端口 <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码 –database 数据库名 <span class="operator">&gt;</span> 文件名.<span class="keyword">sql</span>; </span><br></pre></td></tr></table></figure></li><li>备份所有数据库<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysqldump –<span class="keyword">all</span><span class="operator">-</span>databases <span class="operator">&gt;</span> allbackupfile.sql;</span><br></pre></td></tr></table></figure></li><li>迁移数据库<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>uusername <span class="operator">-</span>ppassword databasename <span class="operator">|</span> mysql –host<span class="operator">=</span><span class="operator">*</span>.<span class="operator">*</span>.<span class="operator">*</span>.<span class="operator">*</span> <span class="operator">-</span>C databasename;</span><br></pre></td></tr></table></figure></li><li>还原数据库<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>hhostname <span class="operator">-</span>uusername <span class="operator">-</span>ppassword databasename <span class="operator">&lt;</span> backupfile.sql;</span><br></pre></td></tr></table></figure></li><li>备份MySQL数据库某个(些)表<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysqldump <span class="operator">-</span>hhostname <span class="operator">-</span>uusername <span class="operator">-</span>ppassword databasename table1 table2 <span class="operator">&gt;</span> backupfile.sql;</span><br></pre></td></tr></table></figure></li><li>导入sql脚本 mysql&gt;模式下进行 且选择了database<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span>source d:\test.sql;</span><br></pre></td></tr></table></figure></li><li>批量导入(bat方法)<ul><li>创建包含所有sql的文件夹sqlscripts</li><li>同目录下创建txt文件<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">::echo off</span><br><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">:: 指定MySQL安装路径</span><br><span class="line">:: D:</span><br><span class="line">:: cd D:\mysql-8.0.17-winx64\bin</span><br><span class="line"></span><br><span class="line">:: 数据库主机</span><br><span class="line">@set host=localhost</span><br><span class="line">:: 数据库名称</span><br><span class="line">@set db=checklist</span><br><span class="line">:: 用户名</span><br><span class="line">@set userName=root</span><br><span class="line">:: 密码</span><br><span class="line">@set password=root</span><br><span class="line">:: 获取文件夹所在绝对路径</span><br><span class="line">@set basePath=%~dp0</span><br><span class="line">:: 要执行的sql脚本</span><br><span class="line">@set sqlpath=%basePath%\all.sql</span><br><span class="line"></span><br><span class="line">echo 开始执行数据库脚本...</span><br><span class="line"></span><br><span class="line">for %%i in (sqlscripts\*.sql) do (</span><br><span class="line">    echo 正在执行 %%i 请稍后...</span><br><span class="line">    echo set names utf8;&gt;all.sql</span><br><span class="line">    echo source %%i&gt;&gt;all.sql</span><br><span class="line">    :: 连接MySQL数据库并执行sql脚本 -f 脚本执行过程中，出现错误继续执行 --default-character-set指定导入数据的编码（与数据库编码相同）</span><br><span class="line">    mysql -f -h %host% -u %userName% --password=%password% %db% &lt; %sqlpath% --default-character-set=gbk</span><br><span class="line">    echo %%i 执行完毕。</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">del all.sql</span><br><span class="line"></span><br><span class="line">echo 所有脚本执行完毕。</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure></li><li>修改loaclhost,database,userName,password</li><li>以ANSI编码格式保存并修改后缀名为bat</li><li>运行bat文件</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Utils </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip 踩坑</title>
      <link href="/2022/07/25/%E5%8D%9A%E5%AE%A2/pip/"/>
      <url>/2022/07/25/%E5%8D%9A%E5%AE%A2/pip/</url>
      
        <content type="html"><![CDATA[<h2 id="1-出现pip安装后-显示成功安装了-但是pip-list没找到包"><a href="#1-出现pip安装后-显示成功安装了-但是pip-list没找到包" class="headerlink" title="1.出现pip安装后 显示成功安装了 但是pip list没找到包"></a>1.出现pip安装后 显示成功安装了 但是pip list没找到包</h2><p>  多个环境下 检查是否是安装到其他python的site-packages目录下<br>  检查AppData\Loacl\Roaming 有没有python文件夹 如果有 则删除该文件夹，同时检查用户环境变量Path是不是配置该路径，如有 则删除掉 然后应用</p><h2 id="2-安装时出现了Using-Cache-使用下面指令"><a href="#2-安装时出现了Using-Cache-使用下面指令" class="headerlink" title="2.安装时出现了Using Cache 使用下面指令"></a>2.安装时出现了Using Cache 使用下面指令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip3 --no-cache-dir install</span><br></pre></td></tr></table></figure><p>  或者直接清理掉Cache</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip cache dir</span><br></pre></td></tr></table></figure><p>  删除得到pip&#x2F;cache文件夹</p><h2 id="3-使用虚拟环境下的pip进行安装时，pip安装了-却找不到装的包在哪里"><a href="#3-使用虚拟环境下的pip进行安装时，pip安装了-却找不到装的包在哪里" class="headerlink" title="3.使用虚拟环境下的pip进行安装时，pip安装了  却找不到装的包在哪里"></a>3.使用虚拟环境下的pip进行安装时，pip安装了  却找不到装的包在哪里</h2><p>  检查系统环境变量，查看虚拟环境的Script目录是否添加到了环境变量<br>  若有多个 检查每个对应的site-packages 看是不是安装到了其他位置，前提是执行了操作1</p><h2 id="4-多环境下pip安装"><a href="#4-多环境下pip安装" class="headerlink" title="4.多环境下pip安装"></a>4.多环境下pip安装</h2><p>  最好安装时，使用pip2 or pip3这样区分 这样很有必要</p><h2 id="5-pip对应版本"><a href="#5-pip对应版本" class="headerlink" title="5.pip对应版本"></a>5.pip对应版本</h2><ul><li>如果系统中只安装Python2，则只能使用pip。</li><li>如果系统中只安装Python3，则可使用pip和pip3，二者等价。</li><li>如果系统中同时安装Python2和Python3，则pip默认给Python2用，pip3指定给Python3用。</li><li>虚拟环境中，若只存在一个python版本，可以认为在用系统中pip和pip3命令都是相同。</li></ul><h2 id="6-pip对应镜像-i"><a href="#6-pip对应镜像-i" class="headerlink" title="6.pip对应镜像 -i"></a>6.pip对应镜像 -i</h2><ul><li>阿里云 :<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></li><li>豆瓣 <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li><li>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/">https://pypi.tuna.tsinghua.edu.cn/simple/</a></li><li>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/">http://pypi.mirrors.ustc.edu.cn/simple/</a></li><li>华中科技大学 <a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></li></ul><h2 id="7-pip安装的包正常，但无法导入，灰置显示"><a href="#7-pip安装的包正常，但无法导入，灰置显示" class="headerlink" title="7.pip安装的包正常，但无法导入，灰置显示"></a>7.pip安装的包正常，但无法导入，灰置显示</h2><p>  版本对不上，支持的版本不对，先卸载，然后指定版本安装<br>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip uninstall page</span><br><span class="line">pip install page==x.x.x</span><br></pre></td></tr></table></figure></p><h2 id="8-pip-install-r-x2F-requirments-txt-其中某个包不能安装"><a href="#8-pip-install-r-x2F-requirments-txt-其中某个包不能安装" class="headerlink" title="8.pip install -r .&#x2F;requirments.txt 其中某个包不能安装"></a>8.pip install -r .&#x2F;requirments.txt 其中某个包不能安装</h2><p>  版本不能用了 把对应报错的版号删了</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码演示</title>
      <link href="/2022/07/24/%E5%8D%9A%E5%AE%A2/%E6%BC%94%E7%A4%BA/"/>
      <url>/2022/07/24/%E5%8D%9A%E5%AE%A2/%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function foo() &#123;</span><br><span class="line">    console.log(&#x27;Hello&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="演示文字"><a href="#演示文字" class="headerlink" title="演示文字"></a>演示文字</h2><p>This is a Demonstration</p><h3 id="演示文字-1"><a href="#演示文字-1" class="headerlink" title="演示文字"></a>演示文字</h3><p>This is a Demonstration</p>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/24/hello-world/"/>
      <url>/2022/07/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
